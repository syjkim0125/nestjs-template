syntax = "proto3";

package user;

service UserService {
  rpc FindOrCreateUser(FindOrCreateUserRequest) returns (User) {}
  rpc SoftDeleteUser(SoftDeleteUserRequest) returns (SoftDeleteUserResponse) {}
  rpc FindAllUsers(Empty) returns (Users) {}
  rpc FindOneUser(FindOneUserDto) returns (User) {}
  rpc QueryUsers(stream PaginationDto) returns (stream Users) {}
}

message Empty {}

message FindOneUserDto {
    string id = 1;
}

message PaginationDto {
    int32 page = 1;
    int32 skip = 2;
}

message Users {
    repeated User users = 1;
}

message FindOrCreateUserRequest {
  string googleId = 1;
  string email = 2;
  string name = 3;
}

message User {
  string id = 1;
  string googleId = 2;
  string email = 3;
  string name = 4;
  UserStatus status = 5; // ACTIVE, DELETED, ...
}

enum UserStatus {
  ACTIVE = 0;
  DELETED = 1;
  PENDING = 2;
}

message SoftDeleteUserRequest {
  string userId = 1;
}

message SoftDeleteUserResponse {
  bool success = 1;
}
